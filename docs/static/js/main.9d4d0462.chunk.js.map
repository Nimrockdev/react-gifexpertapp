{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFechtGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAMlB,SACE,uBACIO,KAAK,OACLC,MAAST,EACTU,SAnBgB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUH,GAFtF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDXO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAW,yCAAhB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAc,IAAD,EAEXd,mBACtB,CACIqB,KAAM,GACNa,SAAQ,IALqB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAwBrC,OAfAC,qBAAU,WAIFxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKvB,CAACpB,IAGIqB,EDnBwBK,CAAa1B,GAAhCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QAEpB,OACI,qCACI,oBAAIJ,UAAW,qCAAf,SAAqDhB,IAEpDoB,GAAW,mBAAGJ,UAAW,mCAAd,qBACZ,qBAAKA,UAAW,aAAhB,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEhB9BgB,EAAe,WAAM,MAGKzC,mBAAS,CAAC,cAHf,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAW9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OAEnB,aADA,CACC,EAAD,CAEIA,SAAYA,GADNA,Y,MCnBlC6B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9d4d0462.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>1){\r\n            setCategories(cats=>[ inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= {handleSubmit} >\r\n          <input\r\n              type=\"text\"\r\n              value = {inputValue}\r\n              onChange= {handleInputChange}\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n    export const getGifs = async(category) =>{\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=h7a00HewjxKwrOpiJW14GTMZ7fZDahgT&q=${encodeURI(category)}&limit=10`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return (\r\n        <div className= \"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useFechtGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setimages] = useState([]);\r\n    const {data:images, loading} = useFechtGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className= \" animate__animated animate__fadeIn\">{category}</h3>\r\n            {/* {loading ? 'Cargando...' : 'Cargado'} */}\r\n            {loading && <p className= \"animate__animated animate__flash\">Loading</p>}\r\n            <div className= \"card-grid \">\r\n                \r\n                    {   //Usamos desustructuracion\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key = {img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFechtGifs= (category) => {\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            data: [],\r\n            loading:true\r\n        }\r\n    );\r\n\r\n    useEffect(()=>{\r\n     \r\n        \r\n            //getGifs(category).then(imgs => setimages(imgs));\r\n            getGifs(category).then(imgs =>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    \r\n\r\n    },[category]);\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories]= useState(['Chernobyl']);\r\n\r\n    // const handleAdd= ()=>{\r\n    //     //setCategories([...categories, 'HunterXHunter']) \r\n    //     // o\r\n    //     setCategories(cats=>[...cats, 'HunterXHunter']) ;\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category=> (\r\n                        //<li key={category}>{category}</li>\r\n                        <GifGrid\r\n                            key= {category} \r\n                            category = {category} \r\n\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n       \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}